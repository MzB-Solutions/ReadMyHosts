name: Release_build

on:
  push:
    branches:
      - "main"
#    tags:
#      - 'v*'
##  release:
##    types: # This configuration does not affect the page_build event above
##      - published

jobs:
  build:
    name: Build (Release)
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        hwBits: [ x64,arm64 ]
        include:
          - os: windows-latest
            platform: win
          - os: ubuntu-latest
            platform: linux
          - os: macos-latest
            platform: osx
    env:
      appVersion: v0.1.6.${{ github.run_number }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_REPOSITORY: MzB-Solutions/ReadMyHosts
      PostSharpLicense: ${{ secrets.PS_LICENSE }}
      DOTNET_NOLOGO: true
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
      WORK_PATH: ${{ github.workspace }}
      buildConfig: Release
      buildTarget: ${{ matrix.platform }}-${{ matrix.hwBits }}
    steps:
    - name: Apply PR labels
      uses: actions/labeler@v2
      with:
        repo-token: "${{ secrets.GITHUB_TOKEN }}"
    - name: Checkout Project
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Cache Nuget
      uses: actions/cache@v2
      with:
        path: ${{ env.NUGET_PACKAGES }}
        key: ${{ runner.os }}-${{ matrix.hwBits }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.hwBits }}-nuget-
    - name: build with restore
      run: |
        pushd ReadMyHosts/
        dotnet build -v n -c ${{ env.buildConfig }} -r ${{ env.buildTarget}} -o ${{ env.WORK_PATH }}/output/
        popd
##    - name: Print debug information
##      run: |
##        printenv
##      shell: bash
    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v5.5
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Prep tag and naming
      shell: bash
      run: |
        ##myTag=$(git describe --tags --abbrev=0)
        ##myTag="${appVersion}"
        myTag=${{ steps.tag_version.outputs.new_tag }}
        release="RMH-${myTag}-${buildTarget}"
        echo "myTag=${myTag}" >> $GITHUB_ENV
        echo "release=${release}" >> $GITHUB_ENV
    - name: Generate Changelog
      shell: bash
      run: echo "# Changelog for ${{ steps.tag_version.outputs.new_tag }}" > ${{ github.workflow }}-${{ steps.tag_version.outputs.new_tag }}-CHANGELOG.txt
    - name: Create Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.release }}
        retention-days: 14
        path: ${{ env.WORK_PATH }}/output/ # or path/to/artifact
        if-no-files-found: error
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        body_path: ${{ github.workflow }}-CHANGELOG.txt
        tag_name: ${{ steps.tag_version.outputs.new_tag }}
        files: ${{ env.WORK_PATH }}/artifacts/${{ env.release }}.zip
