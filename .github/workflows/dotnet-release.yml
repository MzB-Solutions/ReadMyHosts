name: Compile release build

on:
  push:
    branches:
      - "main"
    tags:
      - 'v*'
  release:
    types: # This configuration does not affect the page_build event above
      - published

jobs:
  build:
    name: Build Application (debug) & Artifacts
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        hwBits: [ x86,x64,arm64,arm ]
        include:
          - os: windows-latest
            platform: win
          - os: ubuntu-latest
            platform: linux
          - os: macos-latest
            platform: macosx
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      PostSharpLicense: ${{ secrets.PS_LICENSE }}
      DOTNET_NOLOGO: true
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
      WORK_PATH: ${{ github.workspace }}
      BuildConfig: Release
      buildTarget: ${{ matrix.platform }}-${{ matrix.hwBits }}
    steps:
    - name: Apply PR labels as needed
      uses: actions/labeler@v2
      with:
        repo-token: "${{ secrets.GITHUB_TOKEN }}"
    - name: Checkout Project
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Cache Nuget
      uses: actions/cache@v2
      with:
        path: ${{ env.NUGET_PACKAGES }}
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    - name: Prep artifact name
      shell: bash
      run: |
        tag=$(git describe --tags --abbrev=0)
        echo "tag=$tag" >> $GITHUB_ENV
        release_name="RMH-${{ env.tag }}-${{ matrix.platform }}-${{ matrix.hwBits }}"
        echo "release_name=$release_name" >> GITHUB_ENV
    - name: build with restore
      run: |
        pushd ReadMyHosts/
        dotnet build -v m -c ${{ env.BuildConfig }} -r ${{ env.buildTarget}} -o ${{ env.WORK_PATH }}/output/
        popd
    - name: Print debug information
      run: |
        printenv
      shell: bash
    - name: Create Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.release_name }}
        path: ${{ env.WORK_PATH }}/output/ # or path/to/artifact
        if-no-files-found: error
##    - name: Pack Artifacts
##      run: 7z a -tzip ${{ env.WORK_PATH }}/artifacts/${{ env.release_name }}.zip ${{ env.WORK_PATH }}/output/ -r
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ env.WORK_PATH }}/artifacts/${{ env.release_name }}.zip
