name: .NET Release

on:
  push:
    branches:
      - "main"
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - "main"
      - "!dev"

jobs:
  build:
    name: Build and/or Analyse
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        include:
          - os: windows-latest
            platform: win32
            BuildConfig: Release
            DoSonar: true
          - os: ubuntu-latest
            platform: linux
            BuildConfig: Release
            DoSonar: false
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      appVersion: v0.1d_${{ matrix.platform }}
      PostSharpLicense: ${{ secrets.PS_LICENSE }}
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        if: ${{ matrix.DoSonar == true }}
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        if: ${{ matrix.DoSonar == true }}
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - uses: haya14busa/action-cond@v1
        id: SonarEnabled
        with:
          cond: ${{ matrix.DoSonar == true }} && ${{ steps.cache-sonar-scanner.outputs.cache-hit != 'true' }}
          if_true: true
          if_false: false
      - name: Set up JDK 15
        if: ${{ steps.SonarEnabled.outputs.value == true }}
        uses: actions/setup-java@v2
        with:
          java-version: 15
          check-latest: true
          distribution: zulu
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
      #- name: Prepare SonarCloud scanner
      #  if: ${{ matrix.DoSonar == true }}
      #  shell: powershell
      #  run: |
      #    New-Item -Path .\.sonar\scanner -ItemType Directory
      - name: Install Sonarcloud scanner
        if: ${{ steps.SonarEnabled.outputs.value == true }}
        run: dotnet tool update -v m dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Linux-> Just build
        if: ${{ steps.SonarEnabled.outputs.value == false }}
        run: dotnet build -v m -c ${{ matrix.BuildConfig }} -o ${{ github.workspace }}/output/
      - name: Windows-> Build and analyze
        if: ${{ steps.SonarEnabled.outputs.value == true }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"MzB-Solutions_ReadMyHosts" /o:"mzb-solutions" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build -v m -c ${{ matrix.BuildConfig }} -o ${{ github.workspace }}/output/
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
      - name: Create Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: RMH-${{ matrix.platform }}-${{ env.appVersion}}.${{ env.GITHUB_RUN_NUMBER }}
          path: ${{ github.workspace }}/output/ # or path/to/artifact
          if-no-files-found: error
      - name: Pack Artifacts
        run: 7z a -tzip ${{ github.workspace }}/RMH-${{ matrix.platform }}-${{ env.appVersion }}.zip ${{ github.workspace }}/output/ -r
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          #files: ${{ github.workspace }}/RMH-win32-${{ env.appVersion }}.zip
          files: ${{ github.workspace }}/RMH-${{ matrix.platform }}-${{ env.appVersion }}.zip
