name: .NET build and release

on:
  push:
    branches:
      - "main"
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - "main"
      - "!dev"

jobs:
  build:
    name: Build and/or Analyse
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        include:
          - os: windows-latest
            platform: win32
            BuildConfig: Release
          - os: ubuntu-latest
            platform: linux
            BuildConfig: Release
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      appVersion: v0.1d_${{ matrix.platform }}
      PostSharpLicense: ${{ secrets.PS_LICENSE }}
      DOTNET_NOLOGO: true
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: haya14busa/action-cond@v1
        id: IsLinux
        with:
          cond: ${{ matrix.platform == 'linux' }}
          if_true: true
          if_false: false
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
      - name: build with restore
        run: dotnet build -v m -c ${{ matrix.BuildConfig }} -o ${{ github.workspace }}/output/
      - name: Run Codacy Analysis
        if: ${{ steps.IsLinux.outputs.value == 'true' }}
        uses: codacy/codacy-analysis-cli-action@master
      - name: Create Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: RMH-${{ matrix.platform }}-${{ env.appVersion}}.${{ env.GITHUB_RUN_NUMBER }}
          path: ${{ github.workspace }}/output/ # or path/to/artifact
          if-no-files-found: error
      - name: Pack Artifacts
        run: 7z a -tzip ${{ github.workspace }}/RMH-${{ matrix.platform }}-${{ env.appVersion }}.zip ${{ github.workspace }}/output/ -r
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ github.workspace }}/RMH-${{ matrix.platform }}-${{ env.appVersion }}.zip
