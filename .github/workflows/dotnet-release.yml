name: .NET release and analyze

on:
  push:
    branches:
      - "main"
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - "main"

jobs:
  codeql:
    name: Analyze dependencies for vulnerabilities.
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp' ]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}
    - name: Autobuild
      uses: github/codeql-action/autobuild@v1
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1

  codacy:
    name: Analyze code vulnerabilities.
    runs-on: ubuntu-latest
    env:
      PostSharpLicense: ${{ secrets.PS_LICENSE }}
      DOTNET_NOLOGO: true
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
      - name: build with restore
        run: dotnet build -v m -c Release
      - name: Run Codacy Analysis for Codacy WebUI
        uses: codacy/codacy-analysis-cli-action@master
      - name: Run Codacy Analysis for GH security audits
        uses: codacy/codacy-analysis-cli-action@1.1.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          verbose: true
          output: results.sarif
          format: sarif
          gh-code-scanning-compat: true
          max-allowed-issues: 2147483647
      - name: Upload SARIF results file
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: results.sarif

  build:
    name: Build code and release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        BuildConfig: [ Debug, Release ]
        include:
          - os: windows-latest
            platform: win32
          - os: ubuntu-latest
            platform: linux
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      appVersion: v0.1e(${{ GITHUB_RUN_NUMBER }})
      PostSharpLicense: ${{ secrets.PS_LICENSE }}
      DOTNET_NOLOGO: true
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
      - name: build with restore
        run: dotnet build -v m -c ${{ matrix.BuildConfig }} -o ~/output/
      - name: Create Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: RMH-${{ matrix.platform }}-${{ env.appVersion}}_${{ matrix.BuildConfig }}
          path: ~/output/ # or path/to/artifact
          if-no-files-found: error
      - name: Pack Artifacts
        run: 7z a -tzip ~/RMH-${{ matrix.platform }}-${{ env.appVersion}}_${{ matrix.BuildConfig }}.zip ~/output/ -r
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ~/RMH-${{ matrix.platform }}-${{ env.appVersion}}._${{ matrix.BuildConfig }}.zip
