name: Compile debug build

on:
  push:
    branches:
      - "dev"
##  pull_request:
##    types: [opened, synchronize, reopened]
##    branches:
##      - "main"


jobs:
  build:
    name: Build code and release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        include:
          - os: windows-latest
            platform: win32
          - os: ubuntu-latest
            platform: linux
          - os: macos-latest
            platform: macosx
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      appVersion: v0.1e.build${{ github.run_number }}
      PostSharpLicense: ${{ secrets.PS_LICENSE }}
      DOTNET_NOLOGO: true
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
      WORK_PATH: ${{ github.workspace }}
      BuildConfig: Debug
    steps:
    - name: Checkout Project
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Cache Nuget
      uses: actions/cache@v2
      with:
        path: ${{ env.NUGET_PACKAGES }}
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    - name: build with restore
      run: dotnet build -v m -c ${{ env.BuildConfig }} -o ${{ env.WORK_PATH }}/output/
    - name: Create Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: RMH-${{ matrix.platform }}-${{ env.appVersion}}_${{ env.BuildConfig }}
        path: ${{ env.WORK_PATH }}/output/ # or path/to/artifact
        if-no-files-found: error
    - name: Pack Artifacts
      run: 7z a -tzip ${{ env.WORK_PATH }}/artifacts/RMH-${{ matrix.platform }}-${{ env.appVersion}}_${{ env.BuildConfig }}.zip ${{ env.WORK_PATH }}/output/ -r
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: ${{ env.WORK_PATH }}/artifacts/RMH-${{ matrix.platform }}-${{ env.appVersion}}._${{ env.BuildConfig }}.zip
    - name: debugging information linux/macos
      if: ${{ matrix.platform == 'linux' || matrix.platform == 'macosx' }}
      run: |
        printenv
      shell: bash
    - name: debugging information windows
      if: ${{ matrix.platform == 'win32' }}
      run: |
        Get-ChildItem Env: | Sort Name
      shell: pwsh
